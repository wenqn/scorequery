import sqlite;
import console;

/** 待用
var tablename = "special";
var fieldnames = "testid,testnob,stnumber,stname,stsex,shcool,special,specialnum,spscore,note";
**/

creater_db = function(dbname){
	dbname = string.find(dbname,".db") ? dbname : dbname+".db";
	path = "\www\tcs\" + dbname;
	if(!io.exist(path)) return sqlite(path);//文件不存在，直接创建
	else {//已经存在，选择覆盖或追加方式创建，sqlite（）默认追加方式打开
		var f = win.msgbox("数据库已经存在，是否覆盖？选择‘是’进行覆盖，选择‘否’以追加方式打开，‘取消’返回",,0x03);
		if (f=6) /*yes*/ {
			if(io.remove(path)) return sqlite(path);
			else {win.msgbox("删除数据库错误");return false;}
		}
		else if (f=7) /*no*/ return sqlite(path);
		else /*cancel*/ return false;
	}
	
}

open_db = function(dbname){
	dbname = string.find(dbname,".db") ? dbname : dbname+".db";
	if(!io.exist("\www\tcs\"+dbname)) return false;
	return sqlite("\www\tcs\" + dbname)/* sqlite.open("\www\"+dbname) error*/
}


excelto_db = function(file,db){
	import com;
	
	var excel = com.CreateObject("Excel.Application");
	var book = excel.Workbooks.open(file);
	var sheet = book.Sheets(1);
	
	if(excel){
		excel.Visible = false;
		excel.alerts = false;
	}
	
	if(not db.existsTable("special")){
		db.exec("CREATE TABLE special(testid,testnob,stnumber TEXT,stname,stsex,school,special,specialnum,spscore,note)");
	}
	
	//得到所有字段名
	var fields = db.prepare("SELECT * FROM special").getColumns();
	var sql = "INSERT INTO special VALUES (";
	for(k,v in fields){
			sql += ("@" + v +",");						
	}
	sql = string.sub(sql,0,-2);//去掉最后一个逗号
	sql += ");";

	//从excel每读一行，写入数组row，再由数组写入数据库
	..mainForm.progress.hide = false;//显示进度条
	..mainForm.progress.max = sheet.UsedRange.Rows.Count-1;
	..mainForm.static.hide = false;//显示进度标签
	var tab = {};
	for(i=2;sheet.UsedRange.Rows.Count;1){//第一行标题跳过,i=2开始
		var row = {};
		var value = {}; 
		for(j=1;sheet.UsedRange.Columns.Count;1){
			value[j] = sheet.Cells(i,j).getValue2();
			value[j] = value[j] : ""; //null转换为空值
		}
		for(k=1;#fields;1){
			row[fields[k]] = value[k];
		}
		
		table.push(tab,row);
		
		//每50条写入一次数据库	
		if(i%50==0 || i==sheet.UsedRange.Rows.Count){
			db.beginTrans();//开启事务
			for(k,v in tab){			
					db.prepare(sql).step(v);
					tab = {};
				}		
			db.commitTrans();//关闭事务
		}
				
		..mainForm.progress.pos = i;
		..mainForm.static.text = "已经导入" +(i-1) +"条记录";
		..mainForm.static.redraw();//防止标签闪烁
	}
		
	..mainForm.progress.hide = true;
	..mainForm.static.hide = true;
	
	var counts = db.getTable("SELECT count(*) FROM special");
	win.msgbox("成功导入" + counts[1]["count(*)"] + "条记录");	
	
	excel.ActiveWorkbook.close();
	excel.Quit();
	excel = null;//释放所有对excel对象的引用
	collectgarbage("collect");//内存回收,确保excel完全退出		

}

dbto_listview = function(listView,db){
	if(not db.existsTable("special")){
		return win.msgbox("数据表不存在");
	}
	var fields = db.prepare("SELECT * FROM special").getColumns();
	listView.clear();
	listView.setExtended(0x4);
	listView.insertColumn("序号",100);
	for(k,v in fields){
		listView.insertColumn(v,100);
		
	}

	var rowid = 1//记录序号
	for a1,a2,a3,a4,a5,a6,a7,a8,a9,a10 in db.each("SELECT * FROM special"){
		var tab = {}
		table.push(tab,{rowid;a1;a2;a3;a4;a5;a6;a7;a8;a9;a10})
		listView.addItem(tab[1])
		rowid++	
	}
	win.msgbox("共"+(rowid-1)+"条记录");
	

}

exportExcel = function(path,db){
	import com;
	
	var excel = com.CreateObject("Excel.Application");
	var workbook = excel.WorkBooks.Add();
	var sheet = workbook.Sheets(1);

	excel.Visible = false;
	excel.alerts = false;
	sheet.columns("C:C").NumberFormatLocal = "@";//C 列单元格设为文本格式
	
/*	
	var result = db.getTable("select * from special");
	//写入标题
	for(i=1;#result.fields;1){
		sheet.Cells(1,i).Value2 = result.fields[i];
	
	}
	// 列顺序乱 --------
	for(i=2;#result;1){
		var j = 1;
		for(k,v in result[i]){
			sheet.Cells(i,j).Value2 = v;
			j += 1;
		}
		
	}
	win.msgbox("共导出" ++ (#result -1) ++ "条记录");
*/	
	
	/*
	import raw;
	raw.loadDll("/dll/sqlite3odbc.dll");
	var conn = com.CreateObject("ADODB.Connection");
	conn.Open("ODBC;Driver={SQLite3 ODBC Driver};Database=" ++ io.fullpath("/www/tcs/stsb.db"));
	var rs = com.CreateObject("ADODB.RecordSet");
	rs.CursorLocation = 3;
	rs.Open("select * from special",conn)
	sheet.Range("A1").CopyFromRecordSet(rs)	
			
	*/
	

	//ODBC
	/*
	  	sqliteodbc.dll    Driver with ISO8859-1 SQLite2 engine
   		sqliteodbcu.dll   Driver with UTF-8/UNICODE SQLite2 engine
   		sqlite3odbc.dll   Driver with SQLite3 engine, no WCHAR support for now
	*/
	
	import raw;
	raw.loadDll("\dll\sqlite3odbc.dll");
	with (sheet.QueryTables.Add("ODBC;Driver={SQLite3 ODBC Driver};Database=" ++ io.fullpath("/www/tcs/stsb.db") ++ ";", sheet.Range("$A$1"), "select * from special")) {
		refresh(false);//是否异步查询
		delete();
		
	}
	
	/*
	//oledb Provider值有误
	raw.loadDll("/dll/sqlite-oledb32.dll");
	with (sheet.QueryTables.Add("OLEDB;Provider=SQLITEOLEDB;Data Source="++ io.fullpath("/www/tcs/stsb.db") ++ ";",sheet.Range("$A$1"),"select * from special")){
		refresh(false);
		delete();
		
	}
	*/
	

	excel.ActiveWorkBook.SaveAs(path);
	excel.ActiveWorkbook.close();
	excel.Quit();
	excel = null;//释放所有对excel对象的引用
	collectgarbage("collect");//内存回收,确保excel完全退出
	
	win.msgbox("文件保存到：" ++ path,"保存文件成功")
}

exportCSV = function(path,db){
	var result = db.getTable("select * from special");

}

